

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 19 14:35:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	text5,global,reloc=2,class=CODE,delta=1
    13                           	psect	text6,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.45
    18                           ; Generated 16/11/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F46K22 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _CCPTMRS1bits	set	3912
    52  0000                     _CCPR4H	set	3929
    53  0000                     _CCPR4L	set	3928
    54  0000                     _CCP4CON	set	3927
    55  0000                     _ANSELA	set	3896
    56  0000                     _ANSELE	set	3900
    57  0000                     _ANSELB	set	3897
    58  0000                     _ANSELC	set	3898
    59  0000                     _ANSELD	set	3899
    60  0000                     _INTCONbits	set	4082
    61  0000                     _INTCON2bits	set	4081
    62  0000                     _WPUB	set	3937
    63  0000                     _TRISD	set	3989
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISE	set	3990
    68  0000                     _LATC	set	3979
    69  0000                     _LATB	set	3978
    70  0000                     _LATA	set	3977
    71  0000                     _LATD	set	3980
    72  0000                     _LATE	set	3981
    73  0000                     _T2CONbits	set	4026
    74  0000                     _T2CON	set	4026
    75  0000                     _PIR1bits	set	3998
    76  0000                     _TMR2	set	4028
    77  0000                     _PR2	set	4027
    78  0000                     _OSCTUNE	set	3995
    79  0000                     _OSCCON2	set	4050
    80  0000                     _OSCCON	set	4051
    81                           
    82                           ; #config settings
    83  0000                     
    84                           	psect	cinit
    85  00FEBE                     __pcinit:
    86                           	opt stack 0
    87  00FEBE                     start_initialization:
    88                           	opt stack 0
    89  00FEBE                     __initialization:
    90                           	opt stack 0
    91  00FEBE                     end_of_initialization:
    92                           	opt stack 0
    93  00FEBE                     __end_of__initialization:
    94                           	opt stack 0
    95  00FEBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
    96  00FEC0  6EF8               	movwf	tblptru,c
    97  00FEC2  0100               	movlb	0
    98  00FEC4  EFBE  F07F         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     PWM4_LoadDutyValue@dutyValue:
   105                           	opt stack 0
   106                           
   107                           ; 2 bytes @ 0x0
   108  000001                     	ds	2
   109  000003                     ??_PWM4_LoadDutyValue:
   110                           
   111                           ; 1 bytes @ 0x2
   112  000003                     	ds	2
   113  000005                     main@InputSpeed:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x4
   117  000005                     	ds	1
   118                           tblptru	equ	0xFF8
   119                           
   120 ;;
   121 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   122 ;;
   123 ;; *************** function _main *****************
   124 ;; Defined at:
   125 ;;		line 51 in file "main.c"
   126 ;; Parameters:    Size  Location     Type
   127 ;;		None
   128 ;; Auto vars:     Size  Location     Type
   129 ;;  InputSpeed      1    4[COMRAM] unsigned char 
   130 ;; Return value:  Size  Location     Type
   131 ;;                  1    wreg      void 
   132 ;; Registers used:
   133 ;;		wreg, status,2, status,0, cstack
   134 ;; Tracked objects:
   135 ;;		On entry : 0/0
   136 ;;		On exit  : 0/0
   137 ;;		Unchanged: 0/0
   138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   140 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   142 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   143 ;;Total ram usage:        1 bytes
   144 ;; Hardware stack levels required when called:    2
   145 ;; This function calls:
   146 ;;		_PWM4_Initialize
   147 ;;		_PWM4_LoadDutyValue
   148 ;;		_SYSTEM_Initialize
   149 ;; This function is called by:
   150 ;;		Startup code after reset
   151 ;; This function uses a non-reentrant model
   152 ;;
   153                           
   154                           	psect	text0
   155  00FF7C                     __ptext0:
   156                           	opt stack 0
   157  00FF7C                     _main:
   158                           	opt stack 29
   159                           
   160                           ;main.c: 53: uint8 InputSpeed;
   161                           ;main.c: 56: SYSTEM_Initialize();
   162                           
   163                           ;incstack = 0
   164  00FF7C  EC73  F07F         	call	_SYSTEM_Initialize	;wreg free
   165                           
   166                           ;main.c: 74: PWM4_Initialize();
   167  00FF80  EC7C  F07F         	call	_PWM4_Initialize	;wreg free
   168                           
   169                           ;main.c: 77: {
   170                           ;main.c: 79: switch(InputSpeed)
   171                           
   172                           ;main.c: 76: while (1)
   173  00FF84  D029               	goto	l40
   174  00FF86                     
   175                           ;main.c: 82: {
   176                           ;main.c: 83: PWM4_LoadDutyValue(DC_20);
   177  00FF86  0E00               	movlw	0
   178  00FF88  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   179  00FF8A  0E63               	movlw	99
   180  00FF8C  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   181  00FF8E  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   182                           
   183                           ;main.c: 84: break;
   184  00FF92  D022               	goto	l40
   185  00FF94                     
   186                           ;main.c: 87: {
   187                           ;main.c: 88: PWM4_LoadDutyValue(DC_40);
   188  00FF94  0E00               	movlw	0
   189  00FF96  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   190  00FF98  0EC7               	movlw	199
   191  00FF9A  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   192  00FF9C  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   193                           
   194                           ;main.c: 89: break;
   195  00FFA0  D01B               	goto	l40
   196  00FFA2                     
   197                           ;main.c: 92: {
   198                           ;main.c: 93: PWM4_LoadDutyValue(DC_60);
   199  00FFA2  0E01               	movlw	1
   200  00FFA4  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   201  00FFA6  0E2B               	movlw	43
   202  00FFA8  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   203  00FFAA  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   204                           
   205                           ;main.c: 94: break;
   206  00FFAE  D014               	goto	l40
   207  00FFB0                     
   208                           ;main.c: 97: {
   209                           ;main.c: 98: PWM4_LoadDutyValue(DC_80);
   210  00FFB0  0E01               	movlw	1
   211  00FFB2  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   212  00FFB4  0E8F               	movlw	143
   213  00FFB6  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   214  00FFB8  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   215                           
   216                           ;main.c: 99: break;
   217  00FFBC  D00D               	goto	l40
   218  00FFBE                     
   219                           ;main.c: 102: {
   220                           ;main.c: 103: PWM4_LoadDutyValue(DC_100);
   221  00FFBE  0E01               	movlw	1
   222  00FFC0  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   223  00FFC2  0EF3               	movlw	243
   224  00FFC4  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   225  00FFC6  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   226                           
   227                           ;main.c: 104: break;
   228  00FFCA  D006               	goto	l40
   229  00FFCC                     
   230                           ;main.c: 107: {
   231                           ;main.c: 108: PWM4_LoadDutyValue(DC_0);
   232  00FFCC  0E00               	movlw	0
   233  00FFCE  6E02               	movwf	PWM4_LoadDutyValue@dutyValue+1,c
   234  00FFD0  0E00               	movlw	0
   235  00FFD2  6E01               	movwf	PWM4_LoadDutyValue@dutyValue,c
   236  00FFD4  EC86  F07F         	call	_PWM4_LoadDutyValue	;wreg free
   237  00FFD8                     l40:
   238                           
   239                           ;main.c: 112: {
   240                           ;main.c: 115: }
   241                           ;main.c: 116: }
   242  00FFD8  5005               	movf	main@InputSpeed,w,c
   243                           
   244                           ; Switch size 1, requested type "space"
   245                           ; Number of cases is 6, Range of values is 0 to 5
   246                           ; switch strategies available:
   247                           ; Name         Instructions Cycles
   248                           ; simple_byte           19    10 (average)
   249                           ;	Chosen strategy is simple_byte
   250  00FFDA  0A00               	xorlw	0	; case 0
   251  00FFDC  B4D8               	btfsc	status,2,c
   252  00FFDE  D7F6               	goto	l39
   253  00FFE0  0A01               	xorlw	1	; case 1
   254  00FFE2  B4D8               	btfsc	status,2,c
   255  00FFE4  D7D0               	goto	l33
   256  00FFE6  0A03               	xorlw	3	; case 2
   257  00FFE8  B4D8               	btfsc	status,2,c
   258  00FFEA  D7D4               	goto	l35
   259  00FFEC  0A01               	xorlw	1	; case 3
   260  00FFEE  B4D8               	btfsc	status,2,c
   261  00FFF0  D7D8               	goto	l36
   262  00FFF2  0A07               	xorlw	7	; case 4
   263  00FFF4  B4D8               	btfsc	status,2,c
   264  00FFF6  D7DC               	goto	l37
   265  00FFF8  0A01               	xorlw	1	; case 5
   266  00FFFA  B4D8               	btfsc	status,2,c
   267  00FFFC  D7E0               	goto	l38
   268  00FFFE  D7EC               	goto	l40
   269  010000                     __end_of_main:
   270                           	opt stack 0
   271                           tblptru	equ	0xFF8
   272                           status	equ	0xFD8
   273                           
   274 ;; *************** function _SYSTEM_Initialize *****************
   275 ;; Defined at:
   276 ;;		line 50 in file "mcc_generated_files/mcc.c"
   277 ;; Parameters:    Size  Location     Type
   278 ;;		None
   279 ;; Auto vars:     Size  Location     Type
   280 ;;		None
   281 ;; Return value:  Size  Location     Type
   282 ;;                  1    wreg      void 
   283 ;; Registers used:
   284 ;;		wreg, status,2, cstack
   285 ;; Tracked objects:
   286 ;;		On entry : 0/0
   287 ;;		On exit  : 0/0
   288 ;;		Unchanged: 0/0
   289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   294 ;;Total ram usage:        0 bytes
   295 ;; Hardware stack levels used:    1
   296 ;; Hardware stack levels required when called:    1
   297 ;; This function calls:
   298 ;;		_OSCILLATOR_Initialize
   299 ;;		_PIN_MANAGER_Initialize
   300 ;;		_PWM4_Initialize
   301 ;;		_TMR2_Initialize
   302 ;; This function is called by:
   303 ;;		_main
   304 ;; This function uses a non-reentrant model
   305 ;;
   306                           
   307                           	psect	text1
   308  00FEE6                     __ptext1:
   309                           	opt stack 0
   310  00FEE6                     _SYSTEM_Initialize:
   311                           	opt stack 29
   312                           
   313                           ;mcc.c: 53: PIN_MANAGER_Initialize();
   314                           
   315                           ;incstack = 0
   316  00FEE6  EC9F  F07F         	call	_PIN_MANAGER_Initialize	;wreg free
   317                           
   318                           ;mcc.c: 54: OSCILLATOR_Initialize();
   319  00FEEA  EC64  F07F         	call	_OSCILLATOR_Initialize	;wreg free
   320                           
   321                           ;mcc.c: 55: PWM4_Initialize();
   322  00FEEE  EC7C  F07F         	call	_PWM4_Initialize	;wreg free
   323                           
   324                           ;mcc.c: 56: TMR2_Initialize();
   325  00FEF2  EC6B  F07F         	call	_TMR2_Initialize	;wreg free
   326  00FEF6  0012               	return		;funcret
   327  00FEF8                     __end_of_SYSTEM_Initialize:
   328                           	opt stack 0
   329                           tblptru	equ	0xFF8
   330                           status	equ	0xFD8
   331                           
   332 ;; *************** function _TMR2_Initialize *****************
   333 ;; Defined at:
   334 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   335 ;; Parameters:    Size  Location     Type
   336 ;;		None
   337 ;; Auto vars:     Size  Location     Type
   338 ;;		None
   339 ;; Return value:  Size  Location     Type
   340 ;;                  1    wreg      void 
   341 ;; Registers used:
   342 ;;		wreg, status,2
   343 ;; Tracked objects:
   344 ;;		On entry : 0/0
   345 ;;		On exit  : 0/0
   346 ;;		Unchanged: 0/0
   347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   352 ;;Total ram usage:        0 bytes
   353 ;; Hardware stack levels used:    1
   354 ;; This function calls:
   355 ;;		Nothing
   356 ;; This function is called by:
   357 ;;		_SYSTEM_Initialize
   358 ;; This function uses a non-reentrant model
   359 ;;
   360                           
   361                           	psect	text2
   362  00FED6                     __ptext2:
   363                           	opt stack 0
   364  00FED6                     _TMR2_Initialize:
   365                           	opt stack 29
   366                           
   367                           ;tmr2.c: 67: PR2 = 0x7C;
   368                           
   369                           ;incstack = 0
   370  00FED6  0E7C               	movlw	124
   371  00FED8  6EBB               	movwf	4027,c	;volatile
   372                           
   373                           ;tmr2.c: 70: TMR2 = 0x00;
   374  00FEDA  0E00               	movlw	0
   375  00FEDC  6EBC               	movwf	4028,c	;volatile
   376                           
   377                           ;tmr2.c: 73: PIR1bits.TMR2IF = 0;
   378  00FEDE  929E               	bcf	3998,1,c	;volatile
   379                           
   380                           ;tmr2.c: 76: T2CON = 0x06;
   381  00FEE0  0E06               	movlw	6
   382  00FEE2  6EBA               	movwf	4026,c	;volatile
   383  00FEE4  0012               	return		;funcret
   384  00FEE6                     __end_of_TMR2_Initialize:
   385                           	opt stack 0
   386                           tblptru	equ	0xFF8
   387                           status	equ	0xFD8
   388                           
   389 ;; *************** function _PWM4_Initialize *****************
   390 ;; Defined at:
   391 ;;		line 64 in file "mcc_generated_files/pwm4.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;		None
   394 ;; Auto vars:     Size  Location     Type
   395 ;;		None
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   408 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   409 ;;Total ram usage:        0 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_SYSTEM_Initialize
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text3
   420  00FEF8                     __ptext3:
   421                           	opt stack 0
   422  00FEF8                     _PWM4_Initialize:
   423                           	opt stack 29
   424                           
   425                           ;pwm4.c: 69: CCP4CON = 0x1C;
   426                           
   427                           ;incstack = 0
   428  00FEF8  0E1C               	movlw	28
   429  00FEFA  010F               	movlb	15	; () banked
   430  00FEFC  6F57               	movwf	87,b	;volatile
   431                           
   432                           ;pwm4.c: 72: CCPR4L = 0x0C;
   433  00FEFE  0E0C               	movlw	12
   434  00FF00  6F58               	movwf	88,b	;volatile
   435                           
   436                           ;pwm4.c: 75: CCPR4H = 0x00;
   437  00FF02  0E00               	movlw	0
   438  00FF04  6F59               	movwf	89,b	;volatile
   439                           
   440                           ;pwm4.c: 78: CCPTMRS1bits.C4TSEL = 0x0;
   441  00FF06  0EFC               	movlw	-4
   442  00FF08  1748               	andwf	72,f,b	;volatile
   443                           
   444                           ; BSR set to: 15
   445  00FF0A  0012               	return		;funcret
   446  00FF0C                     __end_of_PWM4_Initialize:
   447                           	opt stack 0
   448                           tblptru	equ	0xFF8
   449                           status	equ	0xFD8
   450                           
   451 ;; *************** function _PIN_MANAGER_Initialize *****************
   452 ;; Defined at:
   453 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;		None
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, status,2
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   471 ;;Total ram usage:        0 bytes
   472 ;; Hardware stack levels used:    1
   473 ;; This function calls:
   474 ;;		Nothing
   475 ;; This function is called by:
   476 ;;		_SYSTEM_Initialize
   477 ;; This function uses a non-reentrant model
   478 ;;
   479                           
   480                           	psect	text4
   481  00FF3E                     __ptext4:
   482                           	opt stack 0
   483  00FF3E                     _PIN_MANAGER_Initialize:
   484                           	opt stack 29
   485                           
   486                           ;pin_manager.c: 62: LATE = 0x00;
   487                           
   488                           ; BSR set to: 15
   489                           ;incstack = 0
   490  00FF3E  0E00               	movlw	0
   491  00FF40  6E8D               	movwf	3981,c	;volatile
   492                           
   493                           ;pin_manager.c: 63: LATD = 0x00;
   494  00FF42  0E00               	movlw	0
   495  00FF44  6E8C               	movwf	3980,c	;volatile
   496                           
   497                           ;pin_manager.c: 64: LATA = 0x00;
   498  00FF46  0E00               	movlw	0
   499  00FF48  6E89               	movwf	3977,c	;volatile
   500                           
   501                           ;pin_manager.c: 65: LATB = 0x00;
   502  00FF4A  0E00               	movlw	0
   503  00FF4C  6E8A               	movwf	3978,c	;volatile
   504                           
   505                           ;pin_manager.c: 66: LATC = 0x00;
   506  00FF4E  0E00               	movlw	0
   507  00FF50  6E8B               	movwf	3979,c	;volatile
   508                           
   509                           ;pin_manager.c: 71: TRISE = 0x07;
   510  00FF52  0E07               	movlw	7
   511  00FF54  6E96               	movwf	3990,c	;volatile
   512                           
   513                           ;pin_manager.c: 72: TRISA = 0xFF;
   514  00FF56  6892               	setf	3986,c	;volatile
   515                           
   516                           ;pin_manager.c: 73: TRISB = 0xFF;
   517  00FF58  6893               	setf	3987,c	;volatile
   518                           
   519                           ;pin_manager.c: 74: TRISC = 0xFF;
   520  00FF5A  6894               	setf	3988,c	;volatile
   521                           
   522                           ;pin_manager.c: 75: TRISD = 0xFD;
   523  00FF5C  0EFD               	movlw	253
   524  00FF5E  6E95               	movwf	3989,c	;volatile
   525                           
   526                           ;pin_manager.c: 80: ANSELD = 0xFF;
   527  00FF60  010F               	movlb	15	; () banked
   528  00FF62  693B               	setf	59,b	;volatile
   529                           
   530                           ;pin_manager.c: 81: ANSELC = 0xFC;
   531  00FF64  0EFC               	movlw	252
   532  00FF66  6F3A               	movwf	58,b	;volatile
   533                           
   534                           ;pin_manager.c: 82: ANSELB = 0x3F;
   535  00FF68  0E3F               	movlw	63
   536  00FF6A  6F39               	movwf	57,b	;volatile
   537                           
   538                           ;pin_manager.c: 83: ANSELE = 0x07;
   539  00FF6C  0E07               	movlw	7
   540  00FF6E  6F3C               	movwf	60,b	;volatile
   541                           
   542                           ;pin_manager.c: 84: ANSELA = 0x2F;
   543  00FF70  0E2F               	movlw	47
   544  00FF72  6F38               	movwf	56,b	;volatile
   545                           
   546                           ;pin_manager.c: 89: WPUB = 0x00;
   547  00FF74  0E00               	movlw	0
   548  00FF76  6E61               	movwf	3937,c	;volatile
   549                           
   550                           ; BSR set to: 15
   551                           ;pin_manager.c: 90: INTCON2bits.nRBPU = 1;
   552  00FF78  8EF1               	bsf	intcon2,7,c	;volatile
   553                           
   554                           ; BSR set to: 15
   555  00FF7A  0012               	return		;funcret
   556  00FF7C                     __end_of_PIN_MANAGER_Initialize:
   557                           	opt stack 0
   558                           tblptru	equ	0xFF8
   559                           intcon2	equ	0xFF1
   560                           status	equ	0xFD8
   561                           
   562 ;; *************** function _OSCILLATOR_Initialize *****************
   563 ;; Defined at:
   564 ;;		line 59 in file "mcc_generated_files/mcc.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, status,2
   573 ;; Tracked objects:
   574 ;;		On entry : 0/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels used:    1
   584 ;; This function calls:
   585 ;;		Nothing
   586 ;; This function is called by:
   587 ;;		_SYSTEM_Initialize
   588 ;; This function uses a non-reentrant model
   589 ;;
   590                           
   591                           	psect	text5
   592  00FEC8                     __ptext5:
   593                           	opt stack 0
   594  00FEC8                     _OSCILLATOR_Initialize:
   595                           	opt stack 29
   596                           
   597                           ;mcc.c: 62: OSCCON = 0x60;
   598                           
   599                           ; BSR set to: 15
   600                           ;incstack = 0
   601  00FEC8  0E60               	movlw	96
   602  00FECA  6ED3               	movwf	4051,c	;volatile
   603                           
   604                           ;mcc.c: 64: OSCCON2 = 0x04;
   605  00FECC  0E04               	movlw	4
   606  00FECE  6ED2               	movwf	4050,c	;volatile
   607                           
   608                           ;mcc.c: 66: OSCTUNE = 0x00;
   609  00FED0  0E00               	movlw	0
   610  00FED2  6E9B               	movwf	3995,c	;volatile
   611  00FED4  0012               	return		;funcret
   612  00FED6                     __end_of_OSCILLATOR_Initialize:
   613                           	opt stack 0
   614                           tblptru	equ	0xFF8
   615                           intcon2	equ	0xFF1
   616                           status	equ	0xFD8
   617                           
   618 ;; *************** function _PWM4_LoadDutyValue *****************
   619 ;; Defined at:
   620 ;;		line 82 in file "mcc_generated_files/pwm4.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;  dutyValue       2    0[COMRAM] unsigned int 
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;                  1    wreg      void 
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   634 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   638 ;;Total ram usage:        4 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; This function calls:
   641 ;;		Nothing
   642 ;; This function is called by:
   643 ;;		_main
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text6
   648  00FF0C                     __ptext6:
   649                           	opt stack 0
   650  00FF0C                     _PWM4_LoadDutyValue:
   651                           	opt stack 30
   652                           
   653                           ;pwm4.c: 85: CCPR4L = ((dutyValue & 0x03FC)>>2);
   654                           
   655                           ;incstack = 0
   656  00FF0C  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   657  00FF10  C002  F004         	movff	PWM4_LoadDutyValue@dutyValue+1,??_PWM4_LoadDutyValue+1
   658  00FF14  90D8               	bcf	status,0,c
   659  00FF16  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
   660  00FF18  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
   661  00FF1A  90D8               	bcf	status,0,c
   662  00FF1C  3204               	rrcf	??_PWM4_LoadDutyValue+1,f,c
   663  00FF1E  3203               	rrcf	??_PWM4_LoadDutyValue,f,c
   664  00FF20  5003               	movf	??_PWM4_LoadDutyValue,w,c
   665  00FF22  010F               	movlb	15	; () banked
   666  00FF24  6F58               	movwf	88,b	;volatile
   667                           
   668                           ;pwm4.c: 88: CCP4CON = ((uint8_t)(CCP4CON & 0xCF) | ((dutyValue & 0x0003)<<4));
   669  00FF26  C001  F003         	movff	PWM4_LoadDutyValue@dutyValue,??_PWM4_LoadDutyValue
   670  00FF2A  0E03               	movlw	3
   671  00FF2C  1603               	andwf	??_PWM4_LoadDutyValue,f,c
   672  00FF2E  3A03               	swapf	??_PWM4_LoadDutyValue,f,c
   673  00FF30  0EF0               	movlw	240
   674  00FF32  1603               	andwf	??_PWM4_LoadDutyValue,f,c
   675  00FF34  5157               	movf	87,w,b	;volatile
   676  00FF36  0BCF               	andlw	207
   677  00FF38  1003               	iorwf	??_PWM4_LoadDutyValue,w,c
   678  00FF3A  6F57               	movwf	87,b	;volatile
   679                           
   680                           ; BSR set to: 15
   681  00FF3C  0012               	return		;funcret
   682  00FF3E                     __end_of_PWM4_LoadDutyValue:
   683                           	opt stack 0
   684  0000                     tblptru	equ	0xFF8
   685                           intcon2	equ	0xFF1
   686                           status	equ	0xFD8
   687                           tblptru	equ	0xFF8
   688                           intcon2	equ	0xFF1
   689                           status	equ	0xFD8
   690                           
   691                           	psect	rparam
   692  0000                     tblptru	equ	0xFF8
   693                           intcon2	equ	0xFF1
   694                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_PWM4_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     522
                                              4 COMRAM     1     1      0
                    _PWM4_Initialize
                 _PWM4_LoadDutyValue
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM4_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM4_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM4_LoadDutyValue                                   4     2      2     500
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM4_Initialize
   _PWM4_LoadDutyValue
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM4_Initialize
     _TMR2_Initialize

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
ABS                  0      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BIGRAM             F37      0       0      37        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 19 14:35:31 2018

                             l40 FFD8                               l33 FF86  
                             l35 FF94                               l36 FFA2  
                             l37 FFB0                               l38 FFBE  
                             l39 FFCC                     __CFG_CP0$OFF 000000  
                   __CFG_CP1$OFF 000000                     __CFG_CP2$OFF 000000  
                   __CFG_CP3$OFF 000000                      __CFG_LVP$ON 000000  
                   __CFG_CPB$OFF 000000                              _PR2 000FBB  
                   __CFG_CPD$OFF 000000                  _TMR2_Initialize FED6  
                _PWM4_Initialize FEF8                             _LATA 000F89  
                           _LATB 000F8A                             _LATC 000F8B  
                           _LATD 000F8C                             _LATE 000F8D  
                           _TMR2 000FBC                             _WPUB 000F61  
                           _main FF7C                    __CFG_BORV$190 000000  
                           start 0000                    __CFG_IESO$OFF 000000  
                   ___param_bank 000000   __size_of_OSCILLATOR_Initialize 000E  
  __end_of_OSCILLATOR_Initialize FED6                            ?_main 0001  
                          _T2CON 000FBA                   __CFG_DEBUG$OFF 000000  
             _PWM4_LoadDutyValue FF0C                            _TRISA 000F92  
                          _TRISB 000F93                            _TRISC 000F94  
                          _TRISD 000F95                            _TRISE 000F96  
                  __CFG_WRT0$OFF 000000                    __CFG_WRT1$OFF 000000  
                  __CFG_WRT2$OFF 000000                    __CFG_WRT3$OFF 000000  
                 __CFG_EBTR0$OFF 000000                   __CFG_FCMEN$OFF 000000  
                 __CFG_EBTR1$OFF 000000                   __CFG_EBTR2$OFF 000000  
                 __CFG_EBTR3$OFF 000000                    __CFG_WRTB$OFF 000000  
                  __CFG_WRTC$OFF 000000                    __CFG_WRTD$OFF 000000  
                 __CFG_EBTRB$OFF 000000              ?_PWM4_LoadDutyValue 0001  
             __CFG_MCLRE$EXTMCLR 000000                            status 000FD8  
                 __CFG_HFOFST$ON 000000                   main@InputSpeed 0005  
                __initialization FEBE                     __end_of_main 0000  
           ??_PWM4_LoadDutyValue 0003          __end_of_PWM4_Initialize FF0C  
        __end_of_TMR2_Initialize FEE6                           ??_main 0005  
                  __activetblptr 000002                           _CCPR4H 000F59  
                         _CCPR4L 000F58                           _ANSELA 000F38  
                         _ANSELB 000F39                           _ANSELC 000F3A  
                         _ANSELD 000F3B                           _ANSELE 000F3C  
                 __CFG_WDTEN$OFF 000000                           _OSCCON 000FD3  
                 __CFG_XINST$OFF 000000                     _CCPTMRS1bits 000F48  
                 __CFG_STVREN$ON 000000                           tblptru 000FF8  
              _SYSTEM_Initialize FEE6                       __accesstop 0060  
        __end_of__initialization FEBE                  __CFG_PBADEN$OFF 000000  
             ?_SYSTEM_Initialize 0001                    ___rparam_used 000001  
                 __pcstackCOMRAM 0001              ??_SYSTEM_Initialize 0001  
               ?_TMR2_Initialize 0001                 ?_PWM4_Initialize 0001  
    PWM4_LoadDutyValue@dutyValue 0001        __end_of_SYSTEM_Initialize FEF8  
                __CFG_PLLCFG$OFF 000000               __CFG_CCP2MX$PORTC1 000000  
             __CFG_CCP3MX$PORTB5 000000                          _CCP4CON 000F57  
                        _OSCCON2 000FD2                          _OSCTUNE 000F9B  
                __CFG_PWRTEN$OFF 000000                          __Hparam 0000  
                        __Lparam 0000                          __pcinit FEBE  
                        __ramtop 1000                          __ptext0 FF7C  
                        __ptext1 FEE6                          __ptext2 FED6  
                        __ptext3 FEF8                          __ptext4 FF3E  
                        __ptext5 FEC8                          __ptext6 FF0C  
          _OSCILLATOR_Initialize FEC8                        _T2CONbits 000FBA  
       ??_PIN_MANAGER_Initialize 0001       __size_of_SYSTEM_Initialize 0012  
           end_of_initialization FEBE                    __Lmediumconst 0000  
    __size_of_PWM4_LoadDutyValue 0032           ?_OSCILLATOR_Initialize 0001  
            start_initialization FEBE  __size_of_PIN_MANAGER_Initialize 003E  
       __size_of_PWM4_Initialize 0014         __size_of_TMR2_Initialize 0010  
         _PIN_MANAGER_Initialize FF3E                 __CFG_PRICLKEN$ON 000000  
                       _PIR1bits 000F9E                 __CFG_WDTPS$32768 000000  
                    _INTCON2bits 000FF1                ??_TMR2_Initialize 0001  
              ??_PWM4_Initialize 0001                         __Hrparam 0000  
     __end_of_PWM4_LoadDutyValue FF3E                         __Lrparam 0000  
             __CFG_BOREN$SBORDIS 000000                __CFG_P2BMX$PORTD2 000000  
        ??_OSCILLATOR_Initialize 0001                    __size_of_main 0084  
                     _INTCONbits 000FF2          ?_PIN_MANAGER_Initialize 0001  
              __CFG_T3CMX$PORTC0 000000   __end_of_PIN_MANAGER_Initialize FF7C  
              __CFG_FOSC$INTIO67 000000  
